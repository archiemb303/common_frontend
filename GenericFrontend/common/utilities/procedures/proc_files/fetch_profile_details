
-- FUNCTION: public.fetch_profile_details(refcursor, integer)
--select *from public.fetch_profile_details('profile_ref',9)
-- DROP FUNCTION public.fetch_profile_details(refcursor, integer);


CREATE OR REPLACE FUNCTION public.fetch_profile_details(
	profile_ref refcursor,
	pid integer)
    RETURNS refcursor
    LANGUAGE 'plpgsql'


    COST 100
    VOLATILE 

AS $BODY$
#variable_conflict use_column
DECLARE em_id character varying := 0;
DECLARE city_name character varying := Null;
BEGIN
em_id:=
(select email_id from public.registration_emailverificationotp
where uuid_id=
(select uuid_id_id from public.registration_uuidtoprofileidmap where profile_id_id=pid));
--city_name:=(SELECT city_name FROM public.location_cities WHERE city_id =(SELECT city_id_id  FROM public.registration_userprofile  WHERE profile_id =pid));

OPEN profile_ref FOR

SELECT em_id as email_id ,first_name AS first_name,last_name AS last_name,sex AS gender,date_of_birth AS date_of_birth,country_id, country_name,state_id,state_name,city_id, city_name 

FROM public.registration_userprofile  a
JOIN public.location_cities b
on a.city_id_id = b. city_id
JOIN public.location_states c
ON b.state_id_id = c.state_id
JOIN public.location_countries d
ON c.country_id_id = d.country_id
WHERE a.profile_id = pid AND a.profile_status_id=1;
RETURN profile_ref;
END;
$BODY$;

ALTER FUNCTION public.fetch_profile_details(integer)
    OWNER TO genericfrontend_shared_db;
